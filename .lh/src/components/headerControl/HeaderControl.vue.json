{
    "sourceFile": "src/components/headerControl/HeaderControl.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1732221594714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732221607015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n     <h1 class=\"text-3xl font-bold text-white\">Horse Racing</h1>\r\n     <div class=\"flex space-x-4\">\r\n       <button\r\n         @click=\"generateProgram\"\r\n+        test-id=\"generate-program\"\r\n         :class=\"[\r\n           'bg-green-600 text-white font-bold py-2 px-6 rounded-full',\r\n           isRaceStarted ? ' opacity-50' : ' hover:bg-green-800',\r\n         ]\"\r\n@@ -13,8 +14,9 @@\n         Generate Program\r\n       </button>\r\n       <button\r\n         @click=\"toggleRace\"\r\n+        test-id=\"toggle-race\"\r\n         :class=\"[\r\n           'bg-yellow-600 text-white font-bold py-2 px-6 rounded-full',\r\n           !programListGenerated ? 'opacity-50' : 'hover:bg-yellow-800',\r\n         ]\"\r\n@@ -22,8 +24,9 @@\n       >\r\n         {{ isRaceStarted ? 'Stop' : 'Start' }}\r\n       </button>\r\n       <button\r\n+        test-id=\"reset\"\r\n         @click=\"reset\"\r\n         class=\"bg-red-600 hover:bg-red-800 text-white font-bold py-2 px-6 rounded-full\"\r\n       >\r\n         Reset\r\n@@ -32,32 +35,28 @@\n   </div>\r\n </template>\r\n \r\n <script lang=\"ts\">\r\n-import { defineComponent, ref, computed, watchEffect } from 'vue';\r\n+import { defineComponent, computed } from 'vue';\r\n import { useStore } from 'vuex';\r\n \r\n export default defineComponent({\r\n   name: 'HeaderControl',\r\n   setup() {\r\n     const store = useStore();\r\n-    const isRaceStarted = ref(false);\r\n     const programListGenerated = computed(\r\n       () => store.getters['getProgramList'].length > 0\r\n     );\r\n \r\n-    watchEffect(() => {\r\n-      isRaceStarted.value = store.getters['getIsRaceStarted'];\r\n-    });\r\n+    const isRaceStarted = computed(() => store.getters['getIsRaceStarted']);\r\n \r\n     const generateProgram = async () => {\r\n       await store.dispatch('generateProgramList');\r\n       store.dispatch('setCurrentRace', 0);\r\n     };\r\n \r\n     const toggleRace = () => {\r\n-      isRaceStarted.value = !isRaceStarted.value;\r\n-      store.dispatch('setIsRaceStarted', isRaceStarted.value);\r\n+      store.dispatch('setIsRaceStarted', !isRaceStarted.value);\r\n       if (!isRaceStarted.value) {\r\n         reset();\r\n       }\r\n     };\r\n@@ -66,9 +65,8 @@\n       store.dispatch('resetHorses');\r\n       store.dispatch('resetPrograms');\r\n       store.dispatch('resetRaces');\r\n       store.dispatch('resetResults');\r\n-      isRaceStarted.value = false;\r\n     };\r\n \r\n     return {\r\n       generateProgram,\r\n@@ -79,6 +77,4 @@\n     };\r\n   },\r\n });\r\n </script>\r\n-\r\n-<style lang=\"scss\" scoped></style>\r\n"
                },
                {
                    "date": 1732221689104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n     <h1 class=\"text-3xl font-bold text-white\">Horse Racing</h1>\r\n     <div class=\"flex space-x-4\">\r\n       <button\r\n         @click=\"generateProgram\"\r\n-        test-id=\"generate-program\"\r\n         :class=\"[\r\n           'bg-green-600 text-white font-bold py-2 px-6 rounded-full',\r\n           isRaceStarted ? ' opacity-50' : ' hover:bg-green-800',\r\n         ]\"\r\n@@ -14,9 +13,8 @@\n         Generate Program\r\n       </button>\r\n       <button\r\n         @click=\"toggleRace\"\r\n-        test-id=\"toggle-race\"\r\n         :class=\"[\r\n           'bg-yellow-600 text-white font-bold py-2 px-6 rounded-full',\r\n           !programListGenerated ? 'opacity-50' : 'hover:bg-yellow-800',\r\n         ]\"\r\n@@ -24,9 +22,8 @@\n       >\r\n         {{ isRaceStarted ? 'Stop' : 'Start' }}\r\n       </button>\r\n       <button\r\n-        test-id=\"reset\"\r\n         @click=\"reset\"\r\n         class=\"bg-red-600 hover:bg-red-800 text-white font-bold py-2 px-6 rounded-full\"\r\n       >\r\n         Reset\r\n@@ -35,28 +32,32 @@\n   </div>\r\n </template>\r\n \r\n <script lang=\"ts\">\r\n-import { defineComponent, computed } from 'vue';\r\n+import { defineComponent, ref, computed, watchEffect } from 'vue';\r\n import { useStore } from 'vuex';\r\n \r\n export default defineComponent({\r\n   name: 'HeaderControl',\r\n   setup() {\r\n     const store = useStore();\r\n+    const isRaceStarted = ref(false);\r\n     const programListGenerated = computed(\r\n       () => store.getters['getProgramList'].length > 0\r\n     );\r\n \r\n-    const isRaceStarted = computed(() => store.getters['getIsRaceStarted']);\r\n+    watchEffect(() => {\r\n+      isRaceStarted.value = store.getters['getIsRaceStarted'];\r\n+    });\r\n \r\n     const generateProgram = async () => {\r\n       await store.dispatch('generateProgramList');\r\n       store.dispatch('setCurrentRace', 0);\r\n     };\r\n \r\n     const toggleRace = () => {\r\n-      store.dispatch('setIsRaceStarted', !isRaceStarted.value);\r\n+      isRaceStarted.value = !isRaceStarted.value;\r\n+      store.dispatch('setIsRaceStarted', isRaceStarted.value);\r\n       if (!isRaceStarted.value) {\r\n         reset();\r\n       }\r\n     };\r\n@@ -65,8 +66,9 @@\n       store.dispatch('resetHorses');\r\n       store.dispatch('resetPrograms');\r\n       store.dispatch('resetRaces');\r\n       store.dispatch('resetResults');\r\n+      isRaceStarted.value = false;\r\n     };\r\n \r\n     return {\r\n       generateProgram,\r\n@@ -77,4 +79,6 @@\n     };\r\n   },\r\n });\r\n </script>\r\n+\r\n+<style lang=\"scss\" scoped></style>\r\n"
                },
                {
                    "date": 1732221730745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n     <h1 class=\"text-3xl font-bold text-white\">Horse Racing</h1>\r\n     <div class=\"flex space-x-4\">\r\n       <button\r\n         @click=\"generateProgram\"\r\n+        test-id=\"generate-program\"\r\n         :class=\"[\r\n           'bg-green-600 text-white font-bold py-2 px-6 rounded-full',\r\n           isRaceStarted ? ' opacity-50' : ' hover:bg-green-800',\r\n         ]\"\r\n@@ -13,8 +14,9 @@\n         Generate Program\r\n       </button>\r\n       <button\r\n         @click=\"toggleRace\"\r\n+        test-id=\"toggle-race\"\r\n         :class=\"[\r\n           'bg-yellow-600 text-white font-bold py-2 px-6 rounded-full',\r\n           !programListGenerated ? 'opacity-50' : 'hover:bg-yellow-800',\r\n         ]\"\r\n@@ -22,8 +24,9 @@\n       >\r\n         {{ isRaceStarted ? 'Stop' : 'Start' }}\r\n       </button>\r\n       <button\r\n+        test-id=\"reset\"\r\n         @click=\"reset\"\r\n         class=\"bg-red-600 hover:bg-red-800 text-white font-bold py-2 px-6 rounded-full\"\r\n       >\r\n         Reset\r\n@@ -32,32 +35,28 @@\n   </div>\r\n </template>\r\n \r\n <script lang=\"ts\">\r\n-import { defineComponent, ref, computed, watchEffect } from 'vue';\r\n+import { defineComponent, computed } from 'vue';\r\n import { useStore } from 'vuex';\r\n \r\n export default defineComponent({\r\n   name: 'HeaderControl',\r\n   setup() {\r\n     const store = useStore();\r\n-    const isRaceStarted = ref(false);\r\n     const programListGenerated = computed(\r\n       () => store.getters['getProgramList'].length > 0\r\n     );\r\n \r\n-    watchEffect(() => {\r\n-      isRaceStarted.value = store.getters['getIsRaceStarted'];\r\n-    });\r\n+    const isRaceStarted = computed(() => store.getters['getIsRaceStarted']);\r\n \r\n     const generateProgram = async () => {\r\n       await store.dispatch('generateProgramList');\r\n       store.dispatch('setCurrentRace', 0);\r\n     };\r\n \r\n     const toggleRace = () => {\r\n-      isRaceStarted.value = !isRaceStarted.value;\r\n-      store.dispatch('setIsRaceStarted', isRaceStarted.value);\r\n+      store.dispatch('setIsRaceStarted', !isRaceStarted.value);\r\n       if (!isRaceStarted.value) {\r\n         reset();\r\n       }\r\n     };\r\n@@ -66,9 +65,8 @@\n       store.dispatch('resetHorses');\r\n       store.dispatch('resetPrograms');\r\n       store.dispatch('resetRaces');\r\n       store.dispatch('resetResults');\r\n-      isRaceStarted.value = false;\r\n     };\r\n \r\n     return {\r\n       generateProgram,\r\n@@ -79,6 +77,4 @@\n     };\r\n   },\r\n });\r\n </script>\r\n-\r\n-<style lang=\"scss\" scoped></style>\r\n"
                },
                {
                    "date": 1732221739545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n     <h1 class=\"text-3xl font-bold text-white\">Horse Racing</h1>\r\n     <div class=\"flex space-x-4\">\r\n       <button\r\n         @click=\"generateProgram\"\r\n-        test-id=\"generate-program\"\r\n         :class=\"[\r\n           'bg-green-600 text-white font-bold py-2 px-6 rounded-full',\r\n           isRaceStarted ? ' opacity-50' : ' hover:bg-green-800',\r\n         ]\"\r\n@@ -14,9 +13,8 @@\n         Generate Program\r\n       </button>\r\n       <button\r\n         @click=\"toggleRace\"\r\n-        test-id=\"toggle-race\"\r\n         :class=\"[\r\n           'bg-yellow-600 text-white font-bold py-2 px-6 rounded-full',\r\n           !programListGenerated ? 'opacity-50' : 'hover:bg-yellow-800',\r\n         ]\"\r\n@@ -24,9 +22,8 @@\n       >\r\n         {{ isRaceStarted ? 'Stop' : 'Start' }}\r\n       </button>\r\n       <button\r\n-        test-id=\"reset\"\r\n         @click=\"reset\"\r\n         class=\"bg-red-600 hover:bg-red-800 text-white font-bold py-2 px-6 rounded-full\"\r\n       >\r\n         Reset\r\n@@ -35,28 +32,32 @@\n   </div>\r\n </template>\r\n \r\n <script lang=\"ts\">\r\n-import { defineComponent, computed } from 'vue';\r\n+import { defineComponent, ref, computed, watchEffect } from 'vue';\r\n import { useStore } from 'vuex';\r\n \r\n export default defineComponent({\r\n   name: 'HeaderControl',\r\n   setup() {\r\n     const store = useStore();\r\n+    const isRaceStarted = ref(false);\r\n     const programListGenerated = computed(\r\n       () => store.getters['getProgramList'].length > 0\r\n     );\r\n \r\n-    const isRaceStarted = computed(() => store.getters['getIsRaceStarted']);\r\n+    watchEffect(() => {\r\n+      isRaceStarted.value = store.getters['getIsRaceStarted'];\r\n+    });\r\n \r\n     const generateProgram = async () => {\r\n       await store.dispatch('generateProgramList');\r\n       store.dispatch('setCurrentRace', 0);\r\n     };\r\n \r\n     const toggleRace = () => {\r\n-      store.dispatch('setIsRaceStarted', !isRaceStarted.value);\r\n+      isRaceStarted.value = !isRaceStarted.value;\r\n+      store.dispatch('setIsRaceStarted', isRaceStarted.value);\r\n       if (!isRaceStarted.value) {\r\n         reset();\r\n       }\r\n     };\r\n@@ -65,8 +66,9 @@\n       store.dispatch('resetHorses');\r\n       store.dispatch('resetPrograms');\r\n       store.dispatch('resetRaces');\r\n       store.dispatch('resetResults');\r\n+      isRaceStarted.value = false;\r\n     };\r\n \r\n     return {\r\n       generateProgram,\r\n@@ -77,4 +79,6 @@\n     };\r\n   },\r\n });\r\n </script>\r\n+\r\n+<style lang=\"scss\" scoped></style>\r\n"
                },
                {
                    "date": 1732221771135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n     <h1 class=\"text-3xl font-bold text-white\">Horse Racing</h1>\r\n     <div class=\"flex space-x-4\">\r\n       <button\r\n         @click=\"generateProgram\"\r\n+        test-id=\"generate-program\"\r\n         :class=\"[\r\n           'bg-green-600 text-white font-bold py-2 px-6 rounded-full',\r\n           isRaceStarted ? ' opacity-50' : ' hover:bg-green-800',\r\n         ]\"\r\n@@ -13,8 +14,9 @@\n         Generate Program\r\n       </button>\r\n       <button\r\n         @click=\"toggleRace\"\r\n+        test-id=\"toggle-race\"\r\n         :class=\"[\r\n           'bg-yellow-600 text-white font-bold py-2 px-6 rounded-full',\r\n           !programListGenerated ? 'opacity-50' : 'hover:bg-yellow-800',\r\n         ]\"\r\n@@ -22,8 +24,9 @@\n       >\r\n         {{ isRaceStarted ? 'Stop' : 'Start' }}\r\n       </button>\r\n       <button\r\n+        test-id=\"reset\"\r\n         @click=\"reset\"\r\n         class=\"bg-red-600 hover:bg-red-800 text-white font-bold py-2 px-6 rounded-full\"\r\n       >\r\n         Reset\r\n@@ -32,32 +35,28 @@\n   </div>\r\n </template>\r\n \r\n <script lang=\"ts\">\r\n-import { defineComponent, ref, computed, watchEffect } from 'vue';\r\n+import { defineComponent, computed } from 'vue';\r\n import { useStore } from 'vuex';\r\n \r\n export default defineComponent({\r\n   name: 'HeaderControl',\r\n   setup() {\r\n     const store = useStore();\r\n-    const isRaceStarted = ref(false);\r\n     const programListGenerated = computed(\r\n       () => store.getters['getProgramList'].length > 0\r\n     );\r\n \r\n-    watchEffect(() => {\r\n-      isRaceStarted.value = store.getters['getIsRaceStarted'];\r\n-    });\r\n+    const isRaceStarted = computed(() => store.getters['getIsRaceStarted']);\r\n \r\n     const generateProgram = async () => {\r\n       await store.dispatch('generateProgramList');\r\n       store.dispatch('setCurrentRace', 0);\r\n     };\r\n \r\n     const toggleRace = () => {\r\n-      isRaceStarted.value = !isRaceStarted.value;\r\n-      store.dispatch('setIsRaceStarted', isRaceStarted.value);\r\n+      store.dispatch('setIsRaceStarted', !isRaceStarted.value);\r\n       if (!isRaceStarted.value) {\r\n         reset();\r\n       }\r\n     };\r\n@@ -66,9 +65,8 @@\n       store.dispatch('resetHorses');\r\n       store.dispatch('resetPrograms');\r\n       store.dispatch('resetRaces');\r\n       store.dispatch('resetResults');\r\n-      isRaceStarted.value = false;\r\n     };\r\n \r\n     return {\r\n       generateProgram,\r\n@@ -79,6 +77,4 @@\n     };\r\n   },\r\n });\r\n </script>\r\n-\r\n-<style lang=\"scss\" scoped></style>\r\n"
                },
                {
                    "date": 1732221780732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,11 +55,11 @@\n     };\r\n \r\n     const toggleRace = () => {\r\n       store.dispatch('setIsRaceStarted', !isRaceStarted.value);\r\n-      if (!isRaceStarted.value) {\r\n-        reset();\r\n-      }\r\n+      // if (!isRaceStarted.value) {\r\n+      //   reset();\r\n+      // }\r\n     };\r\n \r\n     const reset = () => {\r\n       store.dispatch('resetHorses');\r\n"
                },
                {
                    "date": 1732221862190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,11 +55,11 @@\n     };\r\n \r\n     const toggleRace = () => {\r\n       store.dispatch('setIsRaceStarted', !isRaceStarted.value);\r\n-      // if (!isRaceStarted.value) {\r\n-      //   reset();\r\n-      // }\r\n+      if (!isRaceStarted.value) {\r\n+        reset();\r\n+      }\r\n     };\r\n \r\n     const reset = () => {\r\n       store.dispatch('resetHorses');\r\n"
                },
                {
                    "date": 1732222073867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,11 +55,11 @@\n     };\r\n \r\n     const toggleRace = () => {\r\n       store.dispatch('setIsRaceStarted', !isRaceStarted.value);\r\n-      if (!isRaceStarted.value) {\r\n-        reset();\r\n-      }\r\n+      // if (!isRaceStarted.value) {\r\n+      //   reset();\r\n+      // }\r\n     };\r\n \r\n     const reset = () => {\r\n       store.dispatch('resetHorses');\r\n"
                },
                {
                    "date": 1732222089521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,11 +55,11 @@\n     };\r\n \r\n     const toggleRace = () => {\r\n       store.dispatch('setIsRaceStarted', !isRaceStarted.value);\r\n-      // if (!isRaceStarted.value) {\r\n-      //   reset();\r\n-      // }\r\n+      if (!isRaceStarted.value) {\r\n+        reset();\r\n+      }\r\n     };\r\n \r\n     const reset = () => {\r\n       store.dispatch('resetHorses');\r\n"
                },
                {
                    "date": 1732222143550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,10 @@\n \r\n     const toggleRace = () => {\r\n       store.dispatch('setIsRaceStarted', !isRaceStarted.value);\r\n       if (!isRaceStarted.value) {\r\n-        reset();\r\n+        store.dispatch('setIsRaceStarted', false);\r\n+      store.dispatch('setIsRaceInProgress', false);\r\n       }\r\n     };\r\n \r\n     const reset = () => {\r\n"
                },
                {
                    "date": 1732222215826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,9 @@\n       store.dispatch('setIsRaceStarted', !isRaceStarted.value);\r\n       if (!isRaceStarted.value) {\r\n         store.dispatch('setIsRaceStarted', false);\r\n         store.dispatch('setIsRaceInProgress', false);\r\n+        .dispatch('setCurrentRace', 0);\r\n       }\r\n     };\r\n \r\n     const reset = () => {\r\n"
                },
                {
                    "date": 1732222380972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,11 +56,13 @@\n \r\n     const toggleRace = () => {\r\n       store.dispatch('setIsRaceStarted', !isRaceStarted.value);\r\n       if (!isRaceStarted.value) {\r\n-        store.dispatch('setIsRaceStarted', false);\r\n+        setTimeout(() => {\r\n+          store.dispatch('setIsRaceStarted', false);\r\n         store.dispatch('setIsRaceInProgress', false);\r\n         store.dispatch('setCurrentRace', 0);\r\n+        }, 100);\r\n       }\r\n     };\r\n \r\n     const reset = () => {\r\n"
                }
            ],
            "date": 1732221594714,
            "name": "Commit-0",
            "content": "<template>\r\n  <div class=\"flex justify-between items-center p-4 bg-gray-800 shadow-lg\">\r\n    <h1 class=\"text-3xl font-bold text-white\">Horse Racing</h1>\r\n    <div class=\"flex space-x-4\">\r\n      <button\r\n        @click=\"generateProgram\"\r\n        :class=\"[\r\n          'bg-green-600 text-white font-bold py-2 px-6 rounded-full',\r\n          isRaceStarted ? ' opacity-50' : ' hover:bg-green-800',\r\n        ]\"\r\n        :disabled=\"isRaceStarted\"\r\n      >\r\n        Generate Program\r\n      </button>\r\n      <button\r\n        @click=\"toggleRace\"\r\n        :class=\"[\r\n          'bg-yellow-600 text-white font-bold py-2 px-6 rounded-full',\r\n          !programListGenerated ? 'opacity-50' : 'hover:bg-yellow-800',\r\n        ]\"\r\n        :disabled=\"!programListGenerated\"\r\n      >\r\n        {{ isRaceStarted ? 'Stop' : 'Start' }}\r\n      </button>\r\n      <button\r\n        @click=\"reset\"\r\n        class=\"bg-red-600 hover:bg-red-800 text-white font-bold py-2 px-6 rounded-full\"\r\n      >\r\n        Reset\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref, computed, watchEffect } from 'vue';\r\nimport { useStore } from 'vuex';\r\n\r\nexport default defineComponent({\r\n  name: 'HeaderControl',\r\n  setup() {\r\n    const store = useStore();\r\n    const isRaceStarted = ref(false);\r\n    const programListGenerated = computed(\r\n      () => store.getters['getProgramList'].length > 0\r\n    );\r\n\r\n    watchEffect(() => {\r\n      isRaceStarted.value = store.getters['getIsRaceStarted'];\r\n    });\r\n\r\n    const generateProgram = async () => {\r\n      await store.dispatch('generateProgramList');\r\n      store.dispatch('setCurrentRace', 0);\r\n    };\r\n\r\n    const toggleRace = () => {\r\n      isRaceStarted.value = !isRaceStarted.value;\r\n      store.dispatch('setIsRaceStarted', isRaceStarted.value);\r\n      if (!isRaceStarted.value) {\r\n        reset();\r\n      }\r\n    };\r\n\r\n    const reset = () => {\r\n      store.dispatch('resetHorses');\r\n      store.dispatch('resetPrograms');\r\n      store.dispatch('resetRaces');\r\n      store.dispatch('resetResults');\r\n      isRaceStarted.value = false;\r\n    };\r\n\r\n    return {\r\n      generateProgram,\r\n      toggleRace,\r\n      isRaceStarted,\r\n      programListGenerated,\r\n      reset,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"
        }
    ]
}