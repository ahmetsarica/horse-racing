{
    "sourceFile": "src/store/modules/race.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1732222733233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732222839643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,15 @@\n   ) {\r\n     commit('SET_IS_RACE_STARTED', isStarted);\r\n   },\r\n \r\n+  setIsRaceInProgress(\r\n+    { commit }: ActionContext<RaceStateProps, unknown>,\r\n+    isStarted: boolean\r\n+  ) {\r\n+    commit('SET_IS_RACE_IN_PROGRESS', isStarted);\r\n+  },\r\n+\r\n   resetRaces({ commit }: ActionContext<RaceStateProps, unknown>) {\r\n     commit('RESET_RACES');\r\n   },\r\n };\r\n"
                },
                {
                    "date": 1732222847200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,11 +68,11 @@\n   },\r\n \r\n   setIsRaceInProgress(\r\n     { commit }: ActionContext<RaceStateProps, unknown>,\r\n-    isStarted: boolean\r\n+    isInProgress: boolean\r\n   ) {\r\n-    commit('SET_IS_RACE_IN_PROGRESS', isStarted);\r\n+    commit('SET_IS_RACE_IN_PROGRESS', isInProgress);\r\n   },\r\n \r\n   resetRaces({ commit }: ActionContext<RaceStateProps, unknown>) {\r\n     commit('RESET_RACES');\r\n"
                }
            ],
            "date": 1732222733233,
            "name": "Commit-0",
            "content": "import { Horse } from '@/store/modules/horses';\r\nimport { ActionContext } from 'vuex';\r\n\r\nexport interface RaceStateProps {\r\n  currentRace: Race | null;\r\n  isRaceStarted: boolean;\r\n  isRaceInProgress: boolean;\r\n}\r\n\r\nexport interface RaceHorse extends Horse {\r\n  duration: string;\r\n}\r\n\r\nexport interface Race {\r\n  lapIndex: number;\r\n  lapLength: string;\r\n  raceHorses: RaceHorse[];\r\n}\r\n\r\nconst state: RaceStateProps = {\r\n  currentRace: null,\r\n  isRaceStarted: false,\r\n  isRaceInProgress: false,\r\n};\r\n\r\nconst mutations = {\r\n  SET_CURRENT_RACE(state: RaceStateProps, currentRace: Race) {\r\n    state.currentRace = currentRace;\r\n  },\r\n  SET_IS_RACE_STARTED(state: RaceStateProps, isStarted: boolean) {\r\n    state.isRaceStarted = isStarted;\r\n  },\r\n  SET_IS_RACE_IN_PROGRESS(state: RaceStateProps, isInProgress: boolean) {\r\n    state.isRaceInProgress = isInProgress;\r\n  },\r\n  RESET_RACES(state: RaceStateProps) {\r\n    state.currentRace = null;\r\n    state.isRaceStarted = false;\r\n    state.isRaceInProgress = false;\r\n  },\r\n};\r\n\r\nconst actions = {\r\n  setCurrentRace(\r\n    { commit, rootGetters }: ActionContext<RaceStateProps, unknown>,\r\n    index: number\r\n  ) {\r\n    const programList = rootGetters['getProgramList'];\r\n    if (programList && index >= 0 && index < programList.length) {\r\n      const race = programList[index];\r\n      // Convert each horse's condition to a duration string for the race\r\n      const raceHorses = race.horses.map((horse: Horse) => ({\r\n        ...horse,\r\n        duration: `${(100 - horse.condition) / 10 + 1}`,\r\n      }));\r\n      commit('SET_CURRENT_RACE', {\r\n        lapIndex: race.lapIndex,\r\n        lapLength: race.lapLength,\r\n        raceHorses,\r\n      });\r\n    }\r\n  },\r\n  setIsRaceStarted(\r\n    { commit }: ActionContext<RaceStateProps, unknown>,\r\n    isStarted: boolean\r\n  ) {\r\n    commit('SET_IS_RACE_STARTED', isStarted);\r\n  },\r\n  \r\n\r\n  resetRaces({ commit }: ActionContext<RaceStateProps, unknown>) {\r\n    commit('RESET_RACES');\r\n  },\r\n};\r\n\r\nconst getters = {\r\n  getCurrentRace: (state: RaceStateProps) => state.currentRace,\r\n  getIsRaceStarted: (state: RaceStateProps) => state.isRaceStarted,\r\n  getIsRaceInProgress: (state: RaceStateProps) => state.isRaceInProgress,\r\n};\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters,\r\n};\r\n"
        }
    ]
}