{
    "sourceFile": "tests/unit/HeaderControl/HeaderControl.spec.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1732227436764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732228117238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\r\n \r\n describe('HeaderControl.vue', () => {\r\n   let store: Store<State>;\r\n-  let wrapper: VueWrapper<any>;\r\n+  let wrapper: VueWrapper<unkown>;\r\n \r\n   beforeEach(() => {\r\n     store = createStore<State>({\r\n       state: {\r\n"
                },
                {
                    "date": 1732228127289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\r\n \r\n describe('HeaderControl.vue', () => {\r\n   let store: Store<State>;\r\n-  let wrapper: VueWrapper<unkown>;\r\n+  let wrapper: VueWrapper<unknown>;\r\n \r\n   beforeEach(() => {\r\n     store = createStore<State>({\r\n       state: {\r\n"
                },
                {
                    "date": 1732228187952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n import { mount, VueWrapper } from '@vue/test-utils';\r\n import { createStore, Store } from 'vuex';\r\n import HeaderControl from '@/components/headerControl/HeaderControl.vue';\r\n+import { Program } from '@/store/modules/program';\r\n \r\n interface State {\r\n-  programList: any[];\r\n+  programList: Program[];\r\n   isRaceStarted: boolean;\r\n }\r\n \r\n describe('HeaderControl.vue', () => {\r\n"
                }
            ],
            "date": 1732227436764,
            "name": "Commit-0",
            "content": "import { mount, VueWrapper } from '@vue/test-utils';\r\nimport { createStore, Store } from 'vuex';\r\nimport HeaderControl from '@/components/headerControl/HeaderControl.vue';\r\n\r\ninterface State {\r\n  programList: any[];\r\n  isRaceStarted: boolean;\r\n}\r\n\r\ndescribe('HeaderControl.vue', () => {\r\n  let store: Store<State>;\r\n  let wrapper: VueWrapper<any>;\r\n\r\n  beforeEach(() => {\r\n    store = createStore<State>({\r\n      state: {\r\n        programList: [],\r\n        isRaceStarted: false,\r\n      },\r\n      getters: {\r\n        getProgramList: (state) => state.programList,\r\n        getIsRaceStarted: (state) => state.isRaceStarted,\r\n      },\r\n      actions: {\r\n        generateProgramList: jest.fn(),\r\n        setCurrentRace: jest.fn(),\r\n        setIsRaceStarted: jest.fn(),\r\n        resetHorses: jest.fn(),\r\n        resetPrograms: jest.fn(),\r\n        resetRaces: jest.fn(),\r\n        resetResults: jest.fn(),\r\n      },\r\n    });\r\n\r\n    jest.spyOn(store, 'dispatch');\r\n\r\n    wrapper = mount(HeaderControl, {\r\n      global: {\r\n        plugins: [store],\r\n      },\r\n    });\r\n  });\r\n\r\n  it('renders the correct title', () => {\r\n    expect(wrapper.find('h1').text()).toBe('Horse Racing');\r\n  });\r\n\r\n  it('disables the \"Generate Program\" button when race is started', async () => {\r\n    store.state.isRaceStarted = true;\r\n    await wrapper.vm.$nextTick();\r\n    const button = wrapper.find('button:disabled');\r\n    expect(button.exists()).toBe(true);\r\n    expect(button.text()).toBe('Generate Program');\r\n  });\r\n\r\n  it('emits \"generateProgram\" when \"Generate Program\" button is clicked', async () => {\r\n    const button = wrapper.find('[test-id=\"generate-program\"]');\r\n    await button.trigger('click');\r\n    expect(store.dispatch).toHaveBeenCalledWith('generateProgramList');\r\n  });\r\n\r\n});\r\n"
        }
    ]
}