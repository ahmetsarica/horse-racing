{
    "sourceFile": "tests/unit/HorseList/HorseList.spec.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1732228132985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1732228132985,
            "name": "Commit-0",
            "content": "import { mount, VueWrapper } from '@vue/test-utils';\r\nimport { createStore, Store } from 'vuex';\r\nimport HorseList from '@/components/horseList/HorseList.vue';\r\nimport { Horse } from '@/store/modules/horses';\r\n\r\ninterface State {\r\n  horses: Horse[];\r\n}\r\n\r\ndescribe('HorseList.vue', () => {\r\n  let store: Store<State>;\r\n  let wrapper: VueWrapper<unknown>;\r\n\r\n  beforeEach(() => {\r\n    store = createStore<State>({\r\n      state: {\r\n        horses: [\r\n          { id: 1, name: 'Thunder', condition: 90, color: '#000000' },\r\n          { id: 2, name: 'Lightning', condition: 85, color: '#808080' },\r\n        ],\r\n      },\r\n      getters: {\r\n        getAllHorses: (state) => state.horses,\r\n      },\r\n    });\r\n\r\n    wrapper = mount(HorseList, {\r\n      global: {\r\n        plugins: [store],\r\n      },\r\n    });\r\n  });\r\n\r\n  it('renders a list of horses', () => {\r\n    const horseRows = wrapper.findAll('tbody tr');\r\n    expect(horseRows.length).toBe(2);\r\n    expect(horseRows[0].text()).toContain('Thunder');\r\n    expect(horseRows[1].text()).toContain('Lightning');\r\n  });\r\n\r\n  it('displays the correct condition for each horse', () => {\r\n    const horseRows = wrapper.findAll('tbody tr');\r\n    expect(horseRows[0].text()).toContain('90');\r\n    expect(horseRows[1].text()).toContain('85');\r\n  });\r\n\r\n  it('displays the correct color for each horse', () => {\r\n    const horseRows = wrapper.findAll('tbody tr');\r\n    expect(horseRows[0].text()).toContain('#000000');\r\n    expect(horseRows[1].text()).toContain('#808080');\r\n  });\r\n});\r\n"
        }
    ]
}